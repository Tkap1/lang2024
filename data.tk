


struct s_v2i
{
	int x,
	int y,
}

enum e_editor_state
{
	invalid,
	select,
	paint,
	save,
	load,
}

enum e_state
{
	invalid,
	game,
	editor,
}

struct s_player
{
	import s_v2 pos,
	int on_ground,
	s_v2 vel,
	int shoot_timer,
}

struct s_input_data
{
	int shoot,
	int move_left,
	int move_right,
	int move_up,
	int move_down,
	int move_tile_left,
	int move_tile_right,
	int move_tile_up,
	int move_tile_down,
	int jump,
	int place_tile,
	int[10] numbers,
	int cancel,
	int left_click_down,
	int left_click_pressed,
	int left_click_released,
	int remove_tiles,
	int undo,
	int save_map,
	int load_map,
	int confirm,
	int delete_char,
	float wheel,
}

struct s_projectiles
{
	b8[c_max_projectiles] active,
	s_v2[c_max_projectiles] pos,
	s_v2[c_max_projectiles] vel,
}

struct s_spikes
{
	b8[c_max_spikes] active,
	int[c_max_spikes] rotation,
	s_v2i[c_max_spikes] pos,
}

struct s_camera
{
	float zoom,
	s_v2 pos,
	s_v2 offset,
}

struct s_game
{
	s_player player,
	s_spikes spikes,
	s_projectiles projectiles,
}

enum e_animation
{
	explosion,
}

enum e_texture
{
	player_face,
	player_body,
	player_hand,
	tile,
	explosion1,
	explosion2,
	explosion3,
	explosion4,
	explosion5,
	explosion6,
	explosion7,
	explosion8,
	explosion9,
	explosion10,
	explosion11,
	explosion12,
	projectile,
}

struct s_state
{
	int curr,
	int next,
}

// @Note(tkap, 15/02/2024): For things that get undone/redone by undo system
struct s_editor_data
{
	s_map map,
	int[c_max_tiles][c_max_tiles] tiles_selected,
}

struct s_editor
{
	import s_editor_data data,
	int painting,
	int undo_count,
	int undo_index,
	s_editor_data[c_editor_max_undo] undo_stack,
	s_v2 selection_start,
	int selecting,
	s_state state,
	int curr_tile,
	int save_load_cursor,
	char[128] save_load_input,
}

struct s_animation
{
	s_v2 pos,
	int id,
	float time,
	int curr_frame,
}

struct s_animation_data
{
	float delay,
	int frame_count,
	int[32] frames,
}

enum e_tile
{
	invalid,
	basic,
}

#pack
struct s_map
{
	s8[c_max_tiles][c_max_tiles] tiles,
	s_spikes spikes,
}

struct FILE_
{
	int* foo,
}


const int SEEK_SET = 0;
const int SEEK_CUR = 1;
const int SEEK_END = 2;

external_func FILE_* fopen(char*, char*);
external_func int fclose(FILE_*);
external_func u64 fread(void*, u64, u64, FILE_*);
external_func u64 fwrite(void*, u64, u64, FILE_*);
external_func s32 ftell(FILE_*);
external_func int fseek(FILE_*, s32, s32);

