

// raylib

struct s_color
{
	u8 r,
	u8 g,
	u8 b,
	u8 a,
}
const int LOG_WARNING = 4;
const int FLAG_VSYNC_HINT = 64;
const s_color BLACK = {0, 0, 0, 0};
const s_color RED = {230, 41, 55, 255};

external_func void SetTraceLogLevel(s32);
external_func void SetConfigFlags(u32);
external_func void InitWindow(s32, s32, char*);
external_func b32 WindowShouldClose();
external_func void BeginDrawing();
external_func void DrawRectangle(s32, s32, s32, s32, s_color);
external_func void DrawFPS(s32, s32);
external_func void EndDrawing();
external_func void ClearBackground(s_color);

struct s_v2
{
	float x,
	float y,
}

struct s_player
{
	s_v2 pos,
	s_v2 vel,
}

const int c_max_tiles = 32;
const int c_tile_size = 16;
s8[c_max_tiles][c_max_tiles] tiles;


func s_v2 v2(float x, float y)
{
	return {x, y};
}

func int main()
{
	SetTraceLogLevel(4);
	SetConfigFlags(64);
	InitWindow(800, 600, "AZEN");

	s_player player;
	player.pos = v2(32, 32);

	while !WindowShouldClose() {
		BeginDrawing();
		ClearBackground(BLACK);

		for y: c_max_tiles {
			for x: c_max_tiles {
				DrawRectangle(x * c_tile_size, y * c_tile_size, c_tile_size, c_tile_size, RED);
			}
		}

		DrawFPS(16, 16);

		EndDrawing();
	}
}
